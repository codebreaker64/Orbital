name: Flutter APK
# This workflow is triggered on pushes to the main branch.
on: workflow_dispatch
  

      
jobs:
  build:
    # This job will run on an Ubuntu virtual machine.
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./orbital
    steps:
      # Checkout the repository to the runner.
      - uses: actions/checkout@v4

      # Setup Java environment to build the Android app.
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'
          server-id: github
          server-password: ${{ secrets.GITHUB_TOKEN }}
          cache: 'gradle'  # Optional: cache Gradle dependencies for faster builds

      # Setup the Flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # 'stable' can be used for production
          flutter-version: '3.22.2' # specify exact version if needed

      # Check Java and Flutter versions.
      - name: Check Java and Flutter versions
        run: |
          java -version
          flutter --version

      # Run widget tests for the Flutter project.
      - name: Run widget tests
        run: flutter test test/moodtracker_test.dart

      # Get Flutter dependencies.
      - name: Get Flutter dependencies
        run: flutter pub get

      # Build the APK with verbose logs.
      - name: Build APK
        run: flutter build apk --release --split-per-abi --target-platform android-arm 

      # Upload the generated APK to the repository using GitHub API.
      - name: Upload APK to GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          tag: v0.0.${{ github.run_number }}
          token: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write